# Default values for artifact-registry.

replicaCount: 1

image:
  repository: linkacloud/artifact-registry
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

config:
  # aes is the AES key configuration
  # It is used to encrypt the artifact-registry private keys
  aes:
    # If set, a secret will be created
    # key: ""
    # secret:
      # the name of the secret, if there is no aes.key and aes.secret.name is set, the provided secret will be used
      # name: "existing-secret"
      # the key in the secret
      # key: existing-key

  # # disableUI disables the web UI
  disableUI: false

  # backend is oci-registry used as backend for artifact-registry
  backend:
    # host is the hostname of the backend registry, defaults to docker.io
    # host: "docker.io"

    # repo is the repository to use in the backend registry
    # repo: "user/registry"

    # disable backend registry client tls verification
    # insecure: true

    # plainHTTP disable tls for the backend registry
    # plainHTTP: true

    # TODO: add support for config-map as CA Certificates are not secrets
    # clientCA is secret containing the CA used to verify the backend registry certificate
    # a secret is expected with the key ca.crt
    # clientCA: "some-client-ca"

  # proxy:
  #   host: "docker-proxy.example.org"
  #   insecure: false
  #   plainHTTP: false
  #   # TODO: add support for config-map as CA Certificates are not secrets
  #   clientCA: "some-client-ca"
  #   username: "user"
  #   password: "password"

  # domain is the domain name used for the registry.
  # If set, the repositories will also be available as subdomains, e.g.
  # deb.example.com for the repository deb.
  # domain: "example.org"

  # port is the port used for the registry.
  port: 9887
  # tagArtifact will create tags for each artifact as artifact-registry sub-path if enabled
  # e.g. registry.example.org/user/my-registry/my-artifact
  # It is not supported by all backends, e.g. docker.io
  tagArtifacts: false

  # tls:
    # secret is the name of the secret containing the tls certificate and key
    # secretName: "artifact-registry-tls"

env:
  # - name: MY_POD_IP
  #   valueFrom:
  #     fieldRef:
  #       fieldPath: status.podIP

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 9887
  annotations: {}

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    # cert-manager.io/cluster-issuer: "letsencrypt-prod"
  hosts:
    - host: artifact-registry.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

registry:
  enabled: false
  nameOverride: "docker-registry"
  secrets:
    # username: admin, password: admin
    htpasswd: admin:$2y$05$J9ff/uoy4VUxmW8CvTuxN.dstra1DvTJYO8qMGCGdQS0JkiFs04fO
  garbageCollect:
    enabled: false


# extraTemplates is an Array of extra manifests to deploy.
# Strings will be rendered as template.
# Objects are rendered as plain manifests.
extraTemplates:
#- |
#  apiVersion: cert-manager.io/v1
#  kind: Certificate
#  metadata:
#    name: {{ include "artifact-registry.fullname" . }}-internal-tls
#    namespace: {{ .Release.Namespace }}
#    labels:
#      {{- include "artifact-registry.labels" . | nindent 4 }}
#  spec:
#    issuerRef:
#      name: {{ default "local-issuer" ((.Values.certificate).issuer).name}}
#      kind: {{ default "Issuer" ((.Values.certificate).issuer).kind }}
#    secretName: artifact-registry-internal-tls
#    commonName: artifact-registry.artifact-registry.svc.cluster.local
#    dnsNames:
#    - {{ include "artifact-registry.fullname" . }}.{{ .Release.Namespace }}.svc.cluster.local
#    - {{ include "artifact-registry.fullname" . }}.{{ .Release.Namespace }}.svc
#    - {{ include "artifact-registry.fullname" . }}.{{ .Release.Namespace }}
#    - {{ include "artifact-registry.fullname" . }}
